{"version":3,"sources":["hooks/SimpleHooksComp2.js","hooks/SimpleHooksComp3.js","hooks/SimpleHooksComp4.js","hooks/SimpleHooksComp5.js","hooks/SimpleHooksComp6.js","hooks/SimpleHooksComp7.js","hooks/SimpleHooksComp8.js","App.js","hooks/Home.js","hooks/SimpleHooksComp1.js","serviceWorker.js","index.js"],"names":["Count","React","memo","props","useEffect","console","log","react_default","a","createElement","onClick","count","initialState","name","age","reducer","state","action","type","Object","objectSpread","payload","NameContextDemo","createContext","AgeContextDemo","Parent","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inputChange","e","setState","currentTarget","value","_this$state","Fragment","input","onChange","Provider","children","PureComponent","Child1","context","contextType","Child2","Consumer","Child3","TextInput","focusInput","current","focus","createRef","_this$props","ref","defaultProps","FuncInput","forwardRef","assign","RefLearn","_this2","target","refCallback","ele","divRef","textRef","classCompRef","funcRef","refs","span","textContent","_this3","SimpleHooksComp7_TextInput","MyNameContext","Test","useContext","useImperativeHandle","getContent","Item","Menu","list","to","component","_useState","useState","_useState2","slicedToArray","setName","_useState3","_useState4","setCount","comment","author","avatar","src","alt","content","useCallback","countClick","SimpleHooksComp3_Count","countType","useMemo","SimpleHooksComp4_Count","_useReducer","useReducer","_useReducer2","dispatch","es_button","SimpleHooksComp6_Parent","SimpleHooksComp6_Child1","SimpleHooksComp6_Child2","SimpleHooksComp6_Child3","SimpleHooksComp7","useRef","SimpleHooksComp8_Count","App","className","menu","style","width","defaultSelectedKeys","mode","map","item","key","react_router_dom","react_router","path","AppRouter","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e3e717f6.chunk.js","sourcesContent":["import React, {\n  useState, useEffect,\n} from 'react';\nimport { Input, Comment, Avatar } from 'antd';\n\nconst Count = React.memo((props) => {\n  // 组件didmount willunmont执行\n  useEffect(() => {\n    console.log('first render');\n    return () => {\n      console.log('component will unmount');\n    }\n  }, []);\n\n  useEffect(() => {\n    console.log('Count update');\n    return () => {\n      console.log('update did');\n    }\n  });\n\n  const updateCount = () => {\n    props.onClick();\n  };\n\n  return (\n    <div onClick={updateCount}>button {props.count}</div>\n  );\n },\n//  (prevProps, nextProps) => {\n//   // return true 不更新\n//   return prevProps.count === nextProps.count;\n// }\n);\n\nexport default () => {\n  const [name, setName] = useState('jokking');\n  const [count, setCount] = useState(0);\n\n  return (\n    <>\n      <Input\n        type=\"text\"\n        value={name}\n        onChange={(e) => setName(e.currentTarget.value)}\n       />\n       <Comment\n        author={\"小时哥\"}\n        avatar={\n          <Avatar\n            src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n            alt=\"小时哥\"\n          />\n        }\n        content={\n          <p>\n            My comment is {name}\n          </p>\n        }\n      />\n      <Count\n        count={count}\n        onClick={() => setCount(count + 1)}\n      />\n    </>\n  );\n};","import React, {\n  useState, useEffect, useCallback\n} from 'react';\nimport { Input, Comment, Avatar } from 'antd';\n\nconst Count = React.memo((props) => {\n  useEffect(() => {\n    console.log('Count update');\n  });\n\n  const updateCount = () => {\n    props.onClick();\n  };\n\n  return (\n    <div onClick={updateCount}>button {props.count}</div>\n  );\n });\n\nexport default () => {\n  const [name, setName] = useState('jokking');\n  const [count, setCount] = useState(0);\n\n  const inputChange = useCallback((e) => {\n    setName(e.currentTarget.value);\n  }, []);\n\n  const countClick = useCallback(() => {\n   setCount(count + 1);\n  }, [count]);\n\n  return (\n    <>\n      <Input\n        type=\"text\"\n        value={name}\n        onChange={inputChange}\n       />\n       <Comment\n        author={\"小时哥\"}\n        avatar={\n          <Avatar\n            src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n            alt=\"小时哥\"\n          />\n        }\n        content={\n          <p>\n            My comment is {name}\n          </p>\n        }\n      />\n      <Count\n        count={count}\n        onClick={countClick}\n      />\n    </>\n  );\n};","import React, {\n  useState, useEffect, useCallback,\n  useMemo,\n} from 'react';\nimport { Input, Comment, Avatar } from 'antd';\n\nconst Count = React.memo((props) => {\n  useEffect(() => {\n    console.log('Count update');\n  });\n\n  const updateCount = () => {\n    props.onClick();\n  };\n\n  return (\n    <div onClick={updateCount}>button {props.count}</div>\n  );\n });\n\nexport default () => {\n  const [name, setName] = useState('jokking');\n  const [count, setCount] = useState(0);\n\n  const inputChange = useCallback((e) => {\n    setName(e.currentTarget.value);\n  }, []);\n\n  const countClick = useCallback(() => {\n   setCount(count + 1);\n  }, [count]);\n\n  const countType = useMemo(() => {\n    if (count % 2) {\n      return 'odd';\n    }\n    return 'even';\n  }, [count]);\n\n  return (\n    <>\n      <Input\n        type=\"text\"\n        value={name}\n        onChange={inputChange}\n       />\n       <Comment\n        author={\"小时哥\"}\n        avatar={\n          <Avatar\n            src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n            alt=\"小时哥\"\n          />\n        }\n        content={\n          <p>\n            My comment is {name}, Click Count is {countType}\n          </p>\n        }\n      />\n      <Count\n        count={count}\n        onClick={countClick}\n      />\n    </>\n  );\n};","import React, {\n  useReducer, useCallback\n} from 'react';\nimport { Input, Button } from 'antd';\n\nconst initialState = {\n  name: 'jokking',\n  age: 24,\n};\n\nfunction reducer(state, action) {\n   switch(action.type) {\n     case 'addAge':\n       return {\n         ...state,\n         age: ++state.age,\n       };\n     case 'modifiedName':\n       return {\n         ...state,\n         name: action.payload,\n       };\n    default:\n      return state;\n   }\n}\n\nexport default () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const inputChange = useCallback(\n    (e) => {\n      dispatch({\n        type: 'modifiedName',\n        payload: e.currentTarget.value,\n      })\n    },\n    [],\n  )\n  return (\n    <>\n      <Input\n        type=\"text\"\n        value={state.name}\n        onChange={inputChange}\n      />\n      <Button onClick={() => dispatch({type: 'addAge'})}>increment age</Button>\n      <p>name: {state.name}, age: {state.age}</p>\n    </>\n  );\n}","import React, { PureComponent } from 'react';\nimport { Input } from 'antd';\n\nconst NameContextDemo = React.createContext('default');\nconst AgeContextDemo = React.createContext('default');\n\nclass Parent extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      age: '24',\n      name: '小时哥'\n    };\n  }\n\n  inputChange = (e) => {\n    this.setState({ name: e.currentTarget.value });\n  };\n\n  render() {\n    const { name, age } = this.state;\n    return (\n      <>\n        <label>name:</label>\n        <Input\n          type=\"text\"\n          value={name}\n          onChange={this.inputChange}\n        />\n        <NameContextDemo.Provider value={name}>\n          <AgeContextDemo.Provider value={age}>\n            {this.props.children}\n          </AgeContextDemo.Provider>\n        </NameContextDemo.Provider>\n      </>\n    )\n  }\n}\n\nclass Child1 extends PureComponent {\n  static contextType = NameContextDemo;\n  render() {\n    return (\n      <div>{this.context}</div>\n    )\n  }\n}\n\nconst Child2 = () => (<NameContextDemo.Consumer>\n  {value => (\n    <div>Function Context value: {value}</div>\n  )}\n</NameContextDemo.Consumer>);\n\nconst Child3 = () => (\n  <AgeContextDemo.Consumer>\n    {\n      (age) => (\n        <NameContextDemo.Consumer>\n        {\n          (name) => (<span>name: {name}, age: {age}</span>)\n        }\n        </NameContextDemo.Consumer>)\n    }\n  </AgeContextDemo.Consumer>\n)\n\nexport default () => (\n  <>\n    <Parent>\n      <Child1 />\n      <Child2 />\n      <Child3 />\n    </Parent>\n  </>\n)","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n// import RefStringTest from './RefStringTest';\n\nclass TextInput extends PureComponent {\n  static propTypes = {\n    value: PropTypes.string,\n  };\n  static defaultProps = {\n    value: '',\n  };\n\n  constructor(props) {\n    super(props);\n    this.input = React.createRef();\n  }\n\n  focusInput = () => {\n    this.input.current.focus();\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n    return (\n      <input\n        ref={this.input}\n        value={value}\n        onChange={onChange}\n      />\n    );\n  }\n}\n\n// const FuncInput = (props) => (<input ref={ref} {...props} />);\nconst FuncInput = React.forwardRef((props, ref) => (<input ref={ref} {...props} />));\n\nexport default class RefLearn extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '小时哥 Ref learning',\n    };\n\n    this.divRef = null;\n    this.textRef = React.createRef();\n    this.classCompRef = React.createRef();\n    this.funcRef = React.createRef();\n  }\n\n  componentDidMount() {\n    // refs字符串\n    this.refs.span.textContent = 'Ref 字符串 change';\n\n    // createRef\n    this.textRef.current.focus();\n\n    console.log('class component ref...', this.classCompRef);\n    console.log('func component ref...', this.funcRef);\n  }\n\n  inputChange = (e) => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  refCallback = (ele) => {\n    console.log('ref callback ', ele);\n    this.divRef = ele;\n  }\n\n  render() {\n    const { value } = this.state;\n    return (\n      <React.Fragment>\n        <span ref=\"span\">Ref 字符串 会有问题</span>\n        {/* <RefStringTest /> */}\n        <div\n          ref={(ele) => {\n            console.log('内联函数 ref ', ele);\n            this.divRef = ele;\n          }}\n        >Ref 回调 --- 内联函数</div>\n        <div ref={this.refCallback}>Ref 回调 --- 内联函数</div>\n        <input\n          ref={this.textRef}\n          value={value}\n          onChange={this.inputChange}\n        />\n        <TextInput\n          ref={this.classCompRef}\n          value={value}\n          onChange={this.inputChange}\n        />\n        <FuncInput\n          ref={this.funcRef}\n        />\n      </React.Fragment>\n    )\n  }\n}","\nimport React, {\n  createContext, forwardRef, useMemo,\n  useState, useEffect, useCallback,\n  useContext, useRef, useImperativeHandle,\n} from 'react';\nimport { Input, Comment, Avatar } from 'antd';\n\nconst MyNameContext = createContext('hello');\n\nconst Test = forwardRef((props, ref) => {\n  const context = useContext(MyNameContext);\n\n  useImperativeHandle(ref, () => ({\n    getContent() {\n      console.log('ref content');\n    }\n  }));\n\n  return (\n    <p>{context}</p>\n  );\n});\n\nconst Count = React.memo((props) => {\n  useEffect(() => {\n    console.log('Count update');\n  });\n\n  const updateCount = () => {\n    props.onClick();\n  };\n\n  return (\n    <div onClick={updateCount}>button {props.count}</div>\n  );\n });\n\nexport default () => {\n  const [name, setName] = useState('jokking');\n  const [count, setCount] = useState(0);\n\n  const ref = useRef();\n\n  useEffect(() => {\n    console.log('invoke ref method');\n    ref.current.getContent();\n  }, []);\n\n  const inputChange = useCallback((e) => {\n    setName(e.currentTarget.value);\n  }, []);\n\n  const countClick = useCallback(() => {\n   setCount(count + 1);\n  }, [count]);\n\n  const countType = useMemo(() => {\n    if (count % 2) {\n      return 'odd';\n    }\n    return 'even';\n  }, [count]);\n\n  return (\n    <>\n      <Input\n        type=\"text\"\n        value={name}\n        onChange={inputChange}\n       />\n       <Comment\n        author={\"小时哥\"}\n        avatar={\n          <Avatar\n            src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n            alt=\"小时哥\"\n          />\n        }\n        content={\n          <p>\n            My comment is {name}, Click Count is {countType}\n          </p>\n        }\n      />\n      <Count\n        count={count}\n        onClick={countClick}\n      />\n      <MyNameContext.Provider>\n        <Test ref={ref} />\n      </MyNameContext.Provider>\n    </>\n  );\n};","import React from 'react';\nimport { Menu } from 'antd';\nimport {\n  BrowserRouter as Router, Link,\n  Route, Switch,\n} from 'react-router-dom';\nimport Home from './hooks/Home';\nimport SimpleHooksComp1 from './hooks/SimpleHooksComp1';\nimport SimpleHooksComp2 from './hooks/SimpleHooksComp2';\nimport SimpleHooksComp3 from './hooks/SimpleHooksComp3';\nimport SimpleHooksComp4 from './hooks/SimpleHooksComp4';\nimport SimpleHooksComp5 from './hooks/SimpleHooksComp5';\nimport SimpleHooksComp6 from './hooks/SimpleHooksComp6';\nimport SimpleHooksComp7 from './hooks/SimpleHooksComp7';\nimport SimpleHooksComp8 from './hooks/SimpleHooksComp8';\n\nimport './App.css';\n\nconst { Item } = Menu;\n\nconst list = [\n  {\n    to: '/home',\n    name: '首页',\n    component: Home,\n  },\n  {\n    to: '/hooks1',\n    name: 'React 01 -- useState',\n    component: SimpleHooksComp1,\n  },\n  {\n    to: '/hooks2',\n    name: 'React 02 -- useEffect',\n    component: SimpleHooksComp2,\n  },\n  {\n    to: '/hooks3',\n    name: 'React 03 -- useCallback',\n    component: SimpleHooksComp3,\n  },\n  {\n    to: '/hooks4',\n    name: 'React 04 -- useMemo',\n    component: SimpleHooksComp4,\n  },\n  {\n    to: '/context',\n    name: 'React 05 --- useReducer',\n    component: SimpleHooksComp5,\n  },\n  {\n    to: '/context',\n    name: 'React 06 --- Context',\n    component: SimpleHooksComp6,\n  },\n  {\n    to: '/ref',\n    name: 'React 07 --- Ref',\n    component: SimpleHooksComp7,\n  },\n  {\n    to: '/other-hooks',\n    name: 'React 08 --- 其他hooks',\n    component: SimpleHooksComp8,\n  },\n];\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Menu\n        style={{ width: 256 }}\n        defaultSelectedKeys={[ list[0].to ]}\n        mode=\"inline\"\n      >\n        {\n          list.map((item) => (\n            <Item\n              key={item.to}\n            ><Link to={item.to} >{item.name}</Link></Item>\n          ))\n        }\n      </Menu>\n      <div className=\"content\">\n        <Switch>\n          {\n            list.map((item) => <Route key={item.to} path={item.to} component={item.component} />)\n          }\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nfunction AppRouter() {\n  return (\n    <Router>\n      <Route path=\"/\" component={App} />\n    </Router>\n  );\n}\n\nexport default AppRouter;\n","import React from 'react';\n\nexport default () => <div>React Hooks Learning</div>","import React, {\n  useState\n} from 'react';\nimport { Input, Comment, Avatar } from 'antd';\n\nexport default () => {\n  const [name, setName] = useState('jokking');\n  const [count, setCount] = useState(0);\n\n  return (\n    <>\n      <Input\n        type=\"text\"\n        value={name}\n        onChange={(e) => setName(e.currentTarget.value)}\n       />\n      <Comment\n        author={\"小时哥\"}\n        avatar={\n          <Avatar\n            src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n            alt=\"小时哥\"\n          />\n        }\n        content={\n          <p>\n            My comment is {name}\n          </p>\n        }\n      />\n      <div onClick={() => setCount(count + 1)}>button {count}</div>\n    </>\n  );\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}